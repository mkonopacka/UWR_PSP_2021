"0","# dataframe z TRUE/FALSE na potrzeby wyznaczania frakcji"
"0","income_bool <- income %>% mutate("
"0","  W = Education >= 5,"
"0","  K  = Gender == 'K',"
"0","  P  = Sector == 5,"
"0","  .keep = 'none'"
"0",")"
"0","# Wyznaczane raz prawdziwe parametry (cały zbiór)"
"0","real_pw <- mean(income_bool$W)"
"0","real_pk <- mean(income_bool$K)"
"0","real_pp <- mean(income_bool$P)"
"0",""
"0","experiment2 <- function(opt = 1, n = 200, iter = 200, lvl = 0.95){"
"0","  name <- ifelse(opt == 1, 'klasyczny', 'A-C')"
"0","  # Funkcja zwraca listę z histogramem i dataframe wyników zad. 4"
"0","  pw <- numeric(iter)"
"0","  pk <- numeric(iter)"
"0","  pp <- numeric(iter)"
"0","  "
"0","  # liczniki jak często przedział zawiera prawdziwy parametr"
"0","  pw_count <- 0"
"0","  pk_count <- 0"
"0","  pp_count <- 0"
"0","  "
"0","  # skumulowane szerokości przedziałów"
"0","  pw_w <- 0"
"0","  pk_w <- 0"
"0","  pp_w <- 0"
"0","  "
"0","  for (i in 1:iter){"
"0","    X <- sample_n(income_bool, 200)"
"0","    W <- X$W"
"0","    K <- X$K"
"0","    P <- X$P"
"0","    # zapisanie estymatora punktowego "
"0","    pw[i] <- estim_p(W, opt, lvl)"
"0","    pk[i] <- estim_p(K, opt, lvl)"
"0","    pp[i] <- estim_p(P, opt, lvl)"
"0","    # wyznaczanie przedziałów"
"0","    Iw <- przedzial_p(W, opt, lvl)"
"0","    Ik <- przedzial_p(K, opt, lvl)"
"0","    Ip <- przedzial_p(P, opt, lvl)"
"0","    # dodanie ich szerokości"
"0","    pw_w <- pw_w + Iw[2] - Iw[1]"
"0","    pk_w <- pk_w + Ik[2] - Ik[1]"
"0","    pp_w <- pp_w + Ip[2] - Ip[1]"
"0","    # sprawdzenie czy zawierają prawdziwy parametr (frakcję w całym zbiorze income)"
"0","    if (between(real_pw, Iw[1], Iw[2])){pw_count <- pw_count + 1}"
"0","    if (between(real_pk, Ik[1], Ik[2])){pk_count <- pk_count + 1}"
"0","    if (between(real_pp, Ip[1], Ip[2])){pp_count <- pp_count + 1}"
"0","  }"
"0","  # tworzenie histogramów"
"0","  pw_hist <- qplot(pw, xlab = '', ylim = c(0,n/2), geom = 'histogram', main = paste('Estymator pw: ', name), fill = I('Blue'))"
"0","  pk_hist <- qplot(pk, xlab = '', ylim = c(0,n/2), geom = 'histogram', main = paste('Estymator pk: ', name), fill = I('Red'))"
"0","  pp_hist <- qplot(pp, xlab = '', ylim = c(0,n/2), geom = 'histogram', main = paste('Estymator pp: ', name), fill = I('Green'))"
"0","  # tworzenie podsumowania"
"0","  summar <- data.frame("
"0","    estymator = name,"
"0","    n = n,"
"0","    iter = iter,"
"0","    pw_width = mean(pw_w),"
"0","    pk_width = mean(pk_w),"
"0","    pp_width = mean(pp_w),"
"0","    pw_percent = sum(pw_count)/iter,"
"0","    pk_percent = sum(pk_count)/iter,"
"0","    pp_percent = sum(pp_count)/iter"
"0","  )"
"0","  return (list(pw = pw_hist, pk = pk_hist, pp = pp_hist, summar = summar))"
"0","}"
"0",""
"0","zad4_kl <- experiment2()"
"0","zad4_AC <- experiment2(opt = 2)"
"0","rbind(zad4_kl$summar, zad4_AC$summar) %>% knitr::kable(caption = 'Porównanie wyników w zadaniu 3')"
