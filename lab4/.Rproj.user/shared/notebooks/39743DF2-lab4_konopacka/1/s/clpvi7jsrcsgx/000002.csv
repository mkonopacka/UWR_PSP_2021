"0","# Funkcja zwraca lewy i prawy brzeg przedziału ufności dla p; V powinien być wektorem TRUE / FALSE;"
"0","# opt: 1 - klasyczny, 2 - Agrestiego-Coulle"
"0","przedzial_p <- function(V, opt = 1, poziom = 0.95){"
"0","  n <- length(V)"
"0","  u <- qnorm(p = 1 - (1-poziom)/2)"
"0","  if (opt == 1){"
"0","    p <- sum(V)/length(V) # środek przedziału"
"0","    SE <- sqrt((p*(1-p)/n)) # błąd standardowy"
"0","  }"
"0","  if (opt == 2){"
"0","    Y <- sum(V)"
"0","    p <- (Y + 0.5 * u^2)/(n + u^2) # środek przedziału"
"0","    SE <- sqrt((p*(1-p)/(n+ 0.5 * u^2))) # błąd standardowy"
"0","  }"
"0","  return(c(p - u*SE, p+ u*SE))"
"0","}"
"0",""
"0","# Funkcja zwraca estymator punktowy p w oparciu o wektor V (TRUE/FALSE); opt: 1 - klasycznie, 2 - Agrestiego-Coulle na poziomie lvl"
"0","estim_p <- function(V, opt = 1, lvl = 0.95){"
"0","  n = length(V)"
"0","  if (opt == 1){"
"0","    return(sum(V)/n)"
"0","    }"
"0","  else if (opt == 2){"
"0","    u = qnorm(1 - (1-lvl)/2)"
"0","    return ( (sum(V) + 0.5 * u^2)/(n + u^2) )"
"0","}"
"0","}"
