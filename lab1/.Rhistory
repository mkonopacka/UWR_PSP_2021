)
#Histogram2: Średnia------------
qplot(data = data,
x = Średnia,
main = "Liczba obserwacji: Średnia",
xlab = "Średnia",
ylab = "Liczba obserwacji",
geom = "histogram",
col = I("black"),
fill = Płeć,
binwidth = 0.5,
alpha = 0.8
)
#Histogram3: Test psychologiczny-------------
qplot(data = data,
x = TestPsych,
main = "Liczba obserwacji - Test, podział na płeć",
xlab = "IQ",
ylab = "Liczba obserwacji",
geom = "histogram",
col = I("black"),
fill = Płeć,
binwidth = 2
)
#ZADANIE 2-------------------------------------------------------------------------
#zbyt mało klas -> nie wiemy jaki naprawdę jest kształt danych
#zbyt dużo klas -> dane robią się nieczytelne
qplot(data = data,
x = IQ,
main = "Za mało klas",
xlab = "IQ",
ylab = "Liczba obserwacji",
geom = "histogram",
col = I("black"),
fill = I("green"),
bins = 2
)
qplot(data = data,
x = IQ,
main = "Za dużo klas",
xlab = "IQ",
ylab = "Liczba obserwacji",
geom = "histogram",
col = I("black"),
fill = I("green"),
bins = 78
)
#ZADANIE 3------------------------------------------------------------
data1$Sektor <- factor(data1$Sektor)
data1$Płeć <- factor(data1$Płeć, labels = c("M", "K"))
data1$Wykształcenie <- factor(data1$Wykształcenie)
summary(data1)
#histogram (od razu z podziałem na płeć, jak w 1)
#obserwacje odstające - widać które
ggplot(data = data1, aes(x = Zarobki, fill = Płeć))+
geom_histogram(alpha = 0.8,
color = "black",
bins = 40)+
scale_fill_manual(values = c("navy", "red"))+
labs(title = "Histogram: zarobki z podziałem na płeć",
y = "Liczba obserwacji")
#TODO zmienić gęstość siatki
#Load libraries-----
library("ggplot2")
library("data.table")
library("dplyr")
#Load data---------------------------
data <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
data1 <- fread(file = "income.dat",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "Age", "Education", "Gender", "Income", "Sector"))
#Check wheter data includes some NA values (no, any NAs) ----------------------
is_NA_dtf <- is.na.data.frame(data)
is_NA_sum <- colSums(is_NA_dtf)
is_NA_sum
is_NA_dtf1 <- is.na.data.frame(data1)
is_NA_sum1 <- colSums(is_NA_dtf1)
is_NA_sum1
#TASK 1a+b--------------------------------------------------------
summary(data)
#Histogram1: IQ-------------
qplot(data = data,
x = IQ,
main = "Count : IQ, depending on gender",
xlab = "IQ",
ylab = "Count",
geom = "histogram",
col = I("black"),
fill = Gender,
binwidth = 5,
alpha = 0.8
)
#Histogram2: GPA------------
qplot(data = data,
x = GPA,
main = "Count: GPA",
xlab = "GPA",
ylab = "Count",
geom = "histogram",
col = I("black"),
fill = Gender,
binwidth = 0.5,
alpha = 0.8
)
#Histogram3: Psychological test-------------
qplot(data = data,
x = TestPsych,
main = "Count - Test: depending on gender",
xlab = "IQ",
ylab = "Count",
geom = "histogram",
col = I("black"),
fill = Gender,
binwidth = 2
)
#TASK 2-------------------------------------------------------------------------
#too few classes -> we can't see the actual shape of data
#too many classes -> unreadable dala
qplot(data = data,
x = IQ,
main = "Too few classes",
xlab = "IQ",
ylab = "Count",
geom = "histogram",
col = I("black"),
fill = I("green"),
bins = 2
)
qplot(data = data,
x = IQ,
main = "Too many classes",
xlab = "IQ",
ylab = "Count",
geom = "histogram",
col = I("black"),
fill = I("green"),
bins = 78
)
#TASK 3------------------------------------------------------------
data1$Sector <- factor(data1$Sector)
data1$Gender <- factor(data1$Gender, labels = c("M", "F"))
data1$Education <- factor(data1$Education)
summary(data1)
#another histogram
#outliers - obvious from the plot, should be calculated with range (-1.5IQR, 1.5IQR) where IQR = inter quartile range
#we can get quartiles for example from summary()
#TODO define del_outliers function
ggplot(data = data1, aes(x = Income, fill = Gender))+
geom_histogram(color = "black",
bins = 40)+
scale_fill_manual(values = c("navy", "red"))+
labs(title = "Histogram: income depending on gender",
y = "Count")
#TODO change grid size
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
grades <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
library(tidyverse)
grades <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
library(data.table)
grades <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
income <- fread(file = "income.dat",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "Age", "Education", "Gender", "Income", "Sector"))
#TASK 1a+b--------------------------------------------------------
summary(data)
summary(grades)
str(grades)
grades %>% select(c(IQ, GPA, TestPsych))
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram() +
facet_wrap(~var)
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val)) +
facet_wrap(~var)
#Load data---------------------------
data <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
data1 <- fread(file = "income.dat",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "Age", "Education", "Gender", "Income", "Sector"))
#Histogram1: IQ-------------
qplot(data = data,
x = IQ,
main = "Count : IQ, depending on gender",
xlab = "IQ",
ylab = "Count",
geom = "histogram",
col = I("black"),
fill = Gender,
binwidth = 5
)
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val)) +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val)) +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 10) +
labs(x = '', y = 'Liczba')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 10) +
labs(x = '', y = 'Liczba') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15) +
labs(x = '', y = 'Liczba wystąpień') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, col = 'blue') +
labs(x = '', y = 'Liczba wystąpień') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = 'Liczba wystąpień') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych (liczba wystąpień)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = 'liczba wystąpień') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = 'grades.txt') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot(alpha = 0.7) +
geom_histogram(aes(x = val), bins = 15, fill = 'blue') +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_hline(yintercept = mean(group)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_hline(yintercept = mean(var)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_hline(yintercept = mean(val)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_hline(aes(yintercept = mean(val))) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(aes(xintercept = mean(val))) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free')
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(aes(xintercept = mean(val))) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free') +
theme_bw()
summary(grades)
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>% summarise(mean = mean(val))
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>% summarise(mean = mean(val)) -> grades_mean
grades_mean
mean_grades <-
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free') +
theme_bw()
mean_grades <-
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free') +
theme_bw()
mean_grades <-
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free') +
theme_bw()
View(grades_mean)
grades %>%
select(c(IQ, GPA, TestPsych)) %>%
gather('var', 'val') %>%
group_by(var) %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free') +
theme_bw()
library(tidyverse)
library(data.table)
grades <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
income <- fread(file = "income.dat",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "Age", "Education", "Gender", "Income", "Sector"))
grades %>% select(c(IQ, GPA, TestPsych)) %>% gather('var', 'val') %>% group_by(var) -> grades1
grades1
grades1 %>% summarise(mean = mean(val)) -> grades_mean
grades1 %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych', subtitle = '(grades.txt)') +
facet_wrap(~var, scales = 'free') +
theme_bw()
grades1 %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych w zbiorze drades.txt', subtitle = 'Linią zaznaczono średnie') +
facet_wrap(~var, scales = 'free') +
theme_bw()
grades1 %>%
ggplot() +
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
geom_vline(data = grades_mean, aes(xintercept = mean)) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych w zbiorze grades.txt', subtitle = 'Linią zaznaczono średnie') +
facet_wrap(~var, scales = 'free') +
theme_bw()
quantile(grades1$val, c(0.25, 0.5, 0.75))
quantile(1:100, c(0.25, 0.5, 0.75))
quantile(0:100, c(0.25, 0.5, 0.75))
geom_vline(data = grades_stats, aes(xintercept = c(0.1, 0.2)) +
theme_bw()
grades1 %>%
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
grades1 %>%
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych w zbiorze grades.txt', subtitle = 'Linią ciągłą zaznaczono średnie, liniami przerywanymi kwartyle') +
theme_bw()
grades %>% select(c(IQ, GPA, TestPsych)) %>% gather('var', 'val') %>% group_by(var) -> grades1
grades1 %>%
summarise(mean = mean(val),
median = median(val),
Q1 = quant) -> grades_stats
library(tidyverse)
library(data.table)
grades <- fread(file = "grades.txt",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "GPA", "IQ", "Gender", "TestPsych"))
income <- fread(file = "income.dat",
data.table = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE,
col.names = c("Id", "Age", "Education", "Gender", "Income", "Sector"))
grades %>% select(c(IQ, GPA, TestPsych)) %>% gather('var', 'val') %>% group_by(var) -> grades1
grades1 %>%
summarise(mean = mean(val),
median = median(val),
Q1 = quant) -> grades_stats
grades1 %>%
summarise(mean = mean(val),
median = median(val)) -> grades_stats
grades1 %>%
geom_histogram(aes(x = val), bins = 15, fill = 'blue', alpha = 0.7) +
labs(x = '', y = '', title = 'Histogramy zmiennych ilosciowych w zbiorze grades.txt', subtitle = 'Linią ciągłą zaznaczono średnie, liniami przerywanymi kwartyle') +
theme_bw()
ggplot(grades1) +
grades_stats <-
grades1 %>% summarise(mean = mean(val),
median = median(val))
grades_stats <-
grades1 %>% summarise(mean = mean(val),
median = median(val))
